version: '3'

services:
  grafana:
    image: grafana/grafana:10.4.0
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana   # mounting this volume will allow you to save grafana data from launch to launch, but you need to create this with $ docker volume create grafana-data 
    restart: unless-stopped             # you can also see that inside the container there are actually files using: $ docker run -it --rm -v grafana-data:/data alpine ls /data

  prometheus:
    image: prom/prometheus:v2.50.1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: -config.file=/etc/prometheus/prometheus.yml
    restart: unless-stopped

  node_exporter:
    image: prom/node-exporter:v1.7.0
    ports:
      - "9100:9100"
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.5
    ports:
      - "3100:3100"
    volumes:
      - ./loki-local-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.5
    ports:
      - "9080:9080"
    volumes:
      - ./promtail-local-config.yaml:/etc/promtail/config/promtail-local-config.yaml
      - /var/log/:/var/log/                                                          # when you mount this volume, your system logs will be added to the promtail scraping procedures 
      - /var/log/postgresql/:/var/log/postgresql/                                    # that point for psql main.log
    command: -config.file=/etc/promtail/config/promtail-local-config.yaml
    restart: unless-stopped

volumes:
  grafana-data:
    external: true
